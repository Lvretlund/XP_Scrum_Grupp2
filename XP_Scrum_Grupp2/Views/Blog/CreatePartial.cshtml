@model XP_Scrum_Grupp2.Controllers.PostIndexViewModel

@using (Html.BeginForm("Create", "Blog", new { formal = Model }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
                @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>PostIndexViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => Model.NewFormalBlog.Text, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NewFormalBlog.Text, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NewFormalBlog.Text, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => Model.NewFormalBlog.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Category.Type, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Category.Type, "", new { @class = "text-danger" })
        </div>
    </div>
    <br>
        <div class="col-md-10">
            @Html.EditorFor(model => model.NewFormalBlog.File, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NewFormalBlog.File, "", new { @class = "text-danger" })
        </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Categories, new { @class = "col-md-2 control-label" })
   
    </div>
    

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="file" name="upload" />
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
